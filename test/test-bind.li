(let ()
  (import (li match))

  (define (test patt expr rest)
    (let ((binds (*bind* expr patt)))
      (assert (equal? rest binds))))

  (test '(a) '() #f)
  (test '(a) '(1) '((a . 1)))
  (test '(a) '(1 2) #f)
  (test '(a b) '(1) #f)
  (test '(a b) '(1 2) '((a . 1) (b . 2)))
  (test '(a b) '(1 2 3) #f)
  (test '(a ...) '() '((a)))
  (test '(a ...) '(1) '((a 1)))
  (test '(a ...) '(1 2) '((a 1 2)))
  (test '(a b ...) '() #f)
  (test '(a b ...) '(1) '((a . 1) (b)))
  (test '(a b ...) '(1 2) '((a . 1) (b 2)))
  (test '(a b ...) '(1 2 3) '((a . 1) (b 2 3)))
  (test '(a ... b) '() #f)
  (test '(a ... b) '(1) '((a) (b . 1)))
  (test '(a ... b) '(1 2) '((a 1) (b . 2)))
  (test '((a b) ...) '() '((a) (b)))
  (test '((a b) ...) '((1 2)) '((a 1) (b 2)))
  (test '((a b) ...) '((1 2) (3 4)) '((a 1 3) (b 2 4)))
  (test '((a b) ...) '((1) (2)) #f)
  (test '((a b) ...) '((1 2 3) (4 5 6)) #f)
  (test '((a b) ... c) '((1 2) (3 4) 5) '((a 1 3) (b 2 4) (c . 5))))
