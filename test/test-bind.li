(import match)

(define (test patt expr rest)
  (let ((binds (*bind* expr patt)))
    (assert (equal? rest binds))))

(test '(a) '() false)
(test '(a) '(1) '((a . 1)))
(test '(a) '(1 2) false)
(test '(a b) '(1) false)
(test '(a b) '(1 2) '((a . 1) (b . 2)))
(test '(a b) '(1 2 3) false)
(test '(a ...) '() '((a)))
(test '(a ...) '(1) '((a 1)))
(test '(a ...) '(1 2) '((a 1 2)))
(test '(a b ...) '() false)
(test '(a b ...) '(1) '((a . 1) (b)))
(test '(a b ...) '(1 2) '((a . 1) (b 2)))
(test '(a b ...) '(1 2 3) '((a . 1) (b 2 3)))
(test '(a ... b) '() false)
(test '(a ... b) '(1) '((a) (b . 1)))
(test '(a ... b) '(1 2) '((a 1) (b . 2)))
(test '((a b) ...) '() '((a) (b)))
(test '((a b) ...) '((1 2)) '((a 1) (b 2)))
(test '((a b) ...) '((1 2) (3 4)) '((a 1 3) (b 2 4)))
(test '((a b) ...) '((1) (2)) false)
(test '((a b) ...) '((1 2 3) (4 5 6)) false)
(test '((a b) ... c) '((1 2) (3 4) 5) '((a 1 3) (b 2 4) (c . 5)))

(print 'passed)
