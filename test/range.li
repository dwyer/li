(define range
  (let ()
    (define (*range* from to inc)
      (if ((if (positive? inc) >= <=) from to)
        null
        (cons from (*range* (+ from inc) to inc))))
    (lambda args
      (case (length args)
        ((1) (*range* 0 (car args) 1))
        ((2) (*range* (car args)
                      (cadr args)
                      (if (< (car args) (cadr args)) 1 -1)))
        ((3) (*range* (car args)
                      (cadr args)
                      (caddr args)))
        (else (error 'range "wrong number of args" args))))))
