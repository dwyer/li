(let ()

  (import init)

  (define-syntax case-lambda
    (syntax-rules ()
      ((case-lambda (formals . body) ...)
       (lambda args
         (cond ((let lp ((f 'formals) (a args))
                  (cond ((null? f)
                         (null? a))
                        ((pair? f)
                         (and (pair? a)
                              (lp (cdr f) (cdr a))))
                        (else (symbol? f))))
                (apply (lambda formals . body) args))
               ...
               (else (error "wrong number of args" args)))))))

  (export case-lambda))
