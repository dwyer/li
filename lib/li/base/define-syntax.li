(let ()
  (import (li base/syntax-case))
  (import (li random-symbol))

  (define-syntax syntax-rules
    (lambda (x)
      (apply (lambda (literals clauses)
               `(lambda (x)
                  (syntax-case x ,literals ,clauses)))
             (cdr x))))

  ; (define-syntax syntax-rules
  ;   (lambda (x)
  ;     (syntax-case x ()
  ;       ((_ (lit ...) (p t) ...)
  ;        (syntax (lambda (x)
  ;                  (syntax-case x (lit ...)
  ;                    (p (syntax t)) ...)))))))

  (define-syntax let-syntax
    (lambda (x)
      (syntax-case x null
                   ((_ ((var val) ...) e0 e1 ...)
                    (begin
                      (begin (define-syntax var val) ...)
                      (begin e0 e1 ...))))))

  (export syntax-rules syntax-case))
